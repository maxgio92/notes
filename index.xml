<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>maxgio's notes</title><link>https://notes.maxgio.me/</link><description>Recent content on maxgio's notes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://notes.maxgio.me/index.xml" rel="self" type="application/rss+xml"/><item><title>Blogging</title><link>https://notes.maxgio.me/notes/blog/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/blog/</guid><description>CO-RE Features Dev time From “recap” paragraph of https://nakryiko.com/posts/bpf-portability-and-co-re/#bpf-state-of-the-art
vmlinux.h eliminates dependency on kernel headers;
field relocations (field offsets, existence, size, etc) make data extraction from kernel portable;
libbpf-provided Kconfig extern variables allow BPF programs to accommodate various kernel version- and configuration-specific changes;
when everything else fails, app-provided read-only configuration and struct flavors are an ultimate big hammer to address whatever complicated scenario application has to handle.</description></item><item><title>Compuer clocktimes</title><link>https://notes.maxgio.me/notes/computer-clocktimes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/computer-clocktimes/</guid><description> Realtime vs Monotonic: https://stackoverflow.com/questions/41894213/what-is-the-use-of-clock-realtime Monitonic vs Monotonic raw: https://stackoverflow.com/questions/14270300/what-is-the-difference-between-clock-monotonic-clock-monotonic-raw</description></item><item><title>Cosign and keyless signing</title><link>https://notes.maxgio.me/notes/cosign/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/cosign/</guid><description> https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/about-security-hardening-with-openid-connect https://blog.chainguard.dev/zero-friction-keyless-signing-with-github-actions/ https://blog.chainguard.dev/keyless-signing-with-tekton-on-amazon-eks-2/ https://github.blog/2021-12-06-safeguard-container-signing-capability-actions/</description></item><item><title>eBPF links</title><link>https://notes.maxgio.me/notes/ebpf/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/ebpf/</guid><description>General http://vger.kernel.org/lpc_bpf2018_talks/Using_eBPF_as_a_heterogeneous_processing_ABI_LPC_2018.pdf libbpf https://github.com/libbpf/libbpf-bootstrap https://nakryiko.com/posts/libbpf-bootstrap/ CO-RE Features Dev time From “recap” paragraph of https://nakryiko.com/posts/bpf-portability-and-co-re/#bpf-state-of-the-art
vmlinux.h eliminates dependency on kernel headers; field relocations (field offsets, existence, size, etc) make data extraction from kernel portable; libbpf-provided Kconfig extern variables allow BPF programs to accommodate various kernel version- and configuration-specific changes; when everything else fails, app-provided read-only configuration and struct flavors are an ultimate big hammer to address whatever complicated scenario application has to handle.</description></item><item><title>ELF and the Linux kernel binary</title><link>https://notes.maxgio.me/notes/elf-and-kernel-object/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/elf-and-kernel-object/</guid><description>Readings ELF and the special sections of Linux binary: https://lwn.net/Articles/531148/ 101: https://linux-audit.com/elf-binaries-on-linux-understanding-and-analysis/ Sections and segments: https://stackoverflow.com/questions/21279618/when-is-an-elf-text-segment-not-an-elf-text-segment Comment section: https://www.quora.com/What-is-the-significance-of-comment-section-in-ELF GCC and the comment section: https://stackoverflow.com/questions/16033385/how-to-know-the-gcc-version-used-to-build-the-linux https://stackoverflow.com/questions/2387040/how-to-retrieve-the-gcc-version-used-to-compile-a-given-elf-executable Kernel packages: https://dl.managed-protection.com/u/baas/help/20.10/user/en-US/linux-packages.html?TocPath=Installing%20the%20software%7C_____2 https://www.geeksforgeeks.org/difference-between-linker-and-loader/ Get GCC from a Linux release 0. extract-vmlinux Download vmlinux-extractor script, which extracts the ELF binary from the zlib-compressed vmlinuz file.
curl -sLO https://raw.githubusercontent.com/torvalds/linux/master/scripts/extract-vmlinux 1. Download the image package For example, a CentOS-released one:</description></item><item><title>GitOps namespace-as-a-service</title><link>https://notes.maxgio.me/notes/capsule-flux/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/capsule-flux/</guid><description>Links Capsule https://github.com/clastix/capsule/issues/528 Capsule Proxy https://github.com/clastix/capsule-proxy/pull/216 https://github.com/clastix/capsule-proxy/issues/218 PoC https://github.com/maxgio92/flux2-capsule-multi-tenancy Flux https://fluxcd.io/blog/2022/05/may-2022-security-announcement/ https://fluxcd.io/docs/installation/#multi-tenancy-lockdown https://github.com/fluxcd/flux2-multi-tenancy https://github.com/fluxcd/flux2/issues/1704 https://github.com/fluxcd/flux2/pull/2092 https://github.com/fluxcd/flux2/pull/582 Development https://www.martin-helmich.de/en/blog/kubernetes-crd-client.html https://github.com/lucasepe/using-client-go https://sdk.operatorframework.io/docs/building-operators/golang More https://dev.to/ashokan/tenants-with-capsule-3428</description></item><item><title>Golang</title><link>https://notes.maxgio.me/notes/golang/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/golang/</guid><description> https://www.digitalocean.com/community/tutorials/how-to-use-contexts-in-go https://www.digitalocean.com/community/tutorial_series/how-to-code-in-go https://go101.org/article/channel-closing.html dissect Go ELF binary: https://qzaidi.github.io/2017/03/05/elf-go-ident/ https://stackoverflow.com/questions/40823315/x-does-not-implement-y-method-has-a-pointer-receiver FS: https://bitfieldconsulting.com/golang/filesystems</description></item><item><title>K8s links</title><link>https://notes.maxgio.me/notes/2022-07-06-21-01-48/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/2022-07-06-21-01-48/</guid><description> https://github.com/iximiuz/client-go-examples</description></item><item><title>Kubectl resources</title><link>https://notes.maxgio.me/notes/kubectl-resources/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/kubectl-resources/</guid><description>Assume unit CPU: m, Memory: Ki
allocatable_cpu=$(kubectl describe node |grep Allocatable -A 5|grep cpu | awk '{sum+=$NF;} END{print sum;}') allocatable_mem=$(kubectl describe node |grep Allocatable -A 5|grep memory| awk '{sum+=$NF;} END{print sum;}') the allocated resource in request field allocated_req_cpu=$(kubectl describe node |grep Allocated -A 5|grep cpu | awk '{sum+=$2; } END{print sum;}') allocated_req_mem=$(kubectl describe node |grep Allocated -A 5|grep memory| awk '{sum+=$2; } END{print sum;}') finally, we got the resource spaces left usable_req_cpu=$(( allocatable_cpu - allocated_req_cpu )) usable_req_mem=$(( allocatable_mem - allocated_req_mem )) echo Usable CPU request $usable_req_cpu M echo Usable Memory request $usable_req_mem Ki</description></item><item><title>Kubernetes multi-tenancy awesome</title><link>https://notes.maxgio.me/notes/k8s-multitenancy-awesome/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/k8s-multitenancy-awesome/</guid><description>NaaS: Namespace as a Service.
Capsule Kiosk HNC AaaS API as a Service.
KubeZoo CPaaS: Control Plane as a Service.
Kamaji CaaS: Cluster as a Service.
VCluster Virtual Cluster kcp KubeSlice Other: Kubernetes Multi-Tenancy WG Kubernetes benchmarks for multi-tenancy Blogs: https://towardsaws.com/kubernetes-multi-tenancy-approach-b0f58d615971 https://dev.to/ashokan/naas-conclusions-for-now-6oo</description></item><item><title>Kubernetes networking</title><link>https://notes.maxgio.me/notes/k8s-networking/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/k8s-networking/</guid><description> Control and cluster proxy KEP: https://github.com/kubernetes/enhancements/tree/master/keps/sig-api-machinery/1281-network-proxy</description></item><item><title>Networking</title><link>https://notes.maxgio.me/notes/networking/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/networking/</guid><description> https://blog.scottlowe.org/2009/11/27/understanding-npiv-and-npv/</description></item><item><title>OS scheduling</title><link>https://notes.maxgio.me/notes/scheduling/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/scheduling/</guid><description> https://news.ycombinator.com/submitted?id=synergy20&amp;amp;next=30081204&amp;amp;n=31 https://docs.sel4.systems/projects/sel4/documentation.html https://ntrs.nasa.gov/api/citations/20200002390/downloads/20200002390.pdf</description></item><item><title>Programming Go in vim</title><link>https://notes.maxgio.me/notes/vim-go-coc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/vim-go-coc/</guid><description> CoC: https://github.com/neoclide/coc.nvim coc-go extension: https://github.com/josa42/coc-go coc-go settings: https://github.com/rstacruz/vim-coc-settings https://github.com/neoclide/coc.nvim/issues/2087</description></item><item><title>RSA</title><link>https://notes.maxgio.me/notes/rsa/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/rsa/</guid><description>https://www.thedigitalcatonline.com/blog/2018/04/25/rsa-keys</description></item><item><title>Tweets</title><link>https://notes.maxgio.me/notes/tweets/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/tweets/</guid><description> https://twitter.com/foone/status/1545056366854692868?s=21&amp;amp;t=joF0EDTEnSR5ZVSVyZTpdg</description></item><item><title>Why switch to NeoVim?</title><link>https://notes.maxgio.me/notes/why-switch-to-neovim/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/why-switch-to-neovim/</guid><description>Materials:
https://www.reddit.com/r/neovim/comments/hm5xdp/why_switch_over_to_neovim/ https://wiki.archlinux.org/title/Neovim https://neovim.io/</description></item></channel></rss>