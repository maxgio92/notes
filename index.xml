<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>maxgio's notes</title><link>https://notes.maxgio.me/</link><description>Recent content on maxgio's notes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://notes.maxgio.me/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://notes.maxgio.me/notes/network-policy-iptables/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/network-policy-iptables/</guid><description>Network policy in IPtables Links:
https://cloudnativelabs.github.io/post/2017-05-1-kube-network-policies/ https://github.com/k8snetworkplumbingwg/multi-networkpolicy-iptables/tree/master</description></item><item><title>Blogging</title><link>https://notes.maxgio.me/notes/blog/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/blog/</guid><description>CO-RE Features Dev time From “recap” paragraph of https://nakryiko.com/posts/bpf-portability-and-co-re/#bpf-state-of-the-art
vmlinux.h eliminates dependency on kernel headers;
field relocations (field offsets, existence, size, etc) make data extraction from kernel portable;
libbpf-provided Kconfig extern variables allow BPF programs to accommodate various kernel version- and configuration-specific changes;
when everything else fails, app-provided read-only configuration and struct flavors are an ultimate big hammer to address whatever complicated scenario application has to handle.</description></item><item><title>Compuer clocktimes</title><link>https://notes.maxgio.me/notes/computer-clocktimes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/computer-clocktimes/</guid><description> Realtime vs Monotonic: https://stackoverflow.com/questions/41894213/what-is-the-use-of-clock-realtime Monitonic vs Monotonic raw: https://stackoverflow.com/questions/14270300/what-is-the-difference-between-clock-monotonic-clock-monotonic-raw</description></item><item><title>Cosign and keyless signing</title><link>https://notes.maxgio.me/notes/cosign/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/cosign/</guid><description> https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/about-security-hardening-with-openid-connect https://blog.chainguard.dev/zero-friction-keyless-signing-with-github-actions/ https://blog.chainguard.dev/keyless-signing-with-tekton-on-amazon-eks-2/ https://github.blog/2021-12-06-safeguard-container-signing-capability-actions/</description></item><item><title>CSI and fsGroup</title><link>https://notes.maxgio.me/notes/csi-fsgroup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/csi-fsgroup/</guid><description> https://kubernetes-csi.github.io/docs/support-fsgroup.html#csi-driver-fsgroup-support https://github.com/longhorn/longhorn/issues/2131#issuecomment-778897129 https://github.com/kubernetes/kubernetes/pull/39438 https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#configure-volume-permission-and-ownership-change-policy-for-pods https://github.com/kubernetes/examples/issues/260#issuecomment-548357209</description></item><item><title>Dev platform awesome</title><link>https://notes.maxgio.me/notes/development-platform-awesome/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/development-platform-awesome/</guid><description> Acorn.io Score.dev: https://docs.score.dev https://monokle.io/ https://github.com/kubeopsskills/levis https://kompose.io/ https://devspace.io https://docs.podman.io/en/v2.1.1/markdown/podman-generate-kube.1.html https://kpt.dev/ https://tilt.dev https://www.docker.com/blog/welcome-tilt-fixing-the-pains-of-microservice-development-for-kubernetes/ https://www.youtube.com/watch?v=HSFGKxvxsWs KubeVela: https://platformengineering.org/platform-tooling/kubevela Cloudfoundry/korify: https://github.com/cloudfoundry/korif https://github.com/pivotal/kpack Shipwright: https://github.com/shipwright-io/build#try-i Shipa: https://platformengineering.org/platform-tooling/shipa-io others: https://platformengineering.org/platform-tooling Articles:
https://www.contino.io/insights/platform-engineering</description></item><item><title>eBPF links</title><link>https://notes.maxgio.me/notes/ebpf/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/ebpf/</guid><description>General http://vger.kernel.org/lpc_bpf2018_talks/Using_eBPF_as_a_heterogeneous_processing_ABI_LPC_2018.pdf libbpf https://github.com/libbpf/libbpf-bootstrap https://nakryiko.com/posts/libbpf-bootstrap/ CO-RE Features Dev time From “recap” paragraph of https://nakryiko.com/posts/bpf-portability-and-co-re/#bpf-state-of-the-art
vmlinux.h eliminates dependency on kernel headers; field relocations (field offsets, existence, size, etc) make data extraction from kernel portable; libbpf-provided Kconfig extern variables allow BPF programs to accommodate various kernel version- and configuration-specific changes; when everything else fails, app-provided read-only configuration and struct flavors are an ultimate big hammer to address whatever complicated scenario application has to handle.</description></item><item><title>ELF and the Linux kernel binary</title><link>https://notes.maxgio.me/notes/elf-and-kernel-object/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/elf-and-kernel-object/</guid><description>Readings ELF and the special sections of Linux binary: https://lwn.net/Articles/531148/ 101: https://linux-audit.com/elf-binaries-on-linux-understanding-and-analysis/ Sections and segments: https://stackoverflow.com/questions/21279618/when-is-an-elf-text-segment-not-an-elf-text-segment Comment section: https://www.quora.com/What-is-the-significance-of-comment-section-in-ELF GCC and the comment section: https://stackoverflow.com/questions/16033385/how-to-know-the-gcc-version-used-to-build-the-linux https://stackoverflow.com/questions/2387040/how-to-retrieve-the-gcc-version-used-to-compile-a-given-elf-executable Kernel packages: https://dl.managed-protection.com/u/baas/help/20.10/user/en-US/linux-packages.html?TocPath=Installing%20the%20software%7C_____2 https://www.geeksforgeeks.org/difference-between-linker-and-loader/ Get GCC from a Linux release 0. extract-vmlinux Download vmlinux-extractor script, which extracts the ELF binary from the zlib-compressed vmlinuz file.
curl -sLO https://raw.githubusercontent.com/torvalds/linux/master/scripts/extract-vmlinux 1. Download the image package For example, a CentOS-released one:</description></item><item><title>Encryption and digital signing</title><link>https://notes.maxgio.me/notes/rsa-dsa/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/rsa-dsa/</guid><description>Links:
https://stackoverflow.com/questions/2841094/what-is-the-difference-between-dsa-and-rsa/22005627#22005627</description></item><item><title>GitOps namespace-as-a-service</title><link>https://notes.maxgio.me/notes/capsule-flux/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/capsule-flux/</guid><description>Links Capsule https://github.com/clastix/capsule/issues/528 Capsule Proxy https://github.com/clastix/capsule-proxy/pull/216 https://github.com/clastix/capsule-proxy/issues/218 PoC https://github.com/maxgio92/flux2-capsule-multi-tenancy Flux https://fluxcd.io/blog/2022/05/may-2022-security-announcement/ https://fluxcd.io/docs/installation/#multi-tenancy-lockdown https://github.com/fluxcd/flux2-multi-tenancy https://github.com/fluxcd/flux2/issues/1704 https://github.com/fluxcd/flux2/pull/2092 https://github.com/fluxcd/flux2/pull/582 Development https://www.martin-helmich.de/en/blog/kubernetes-crd-client.html https://github.com/lucasepe/using-client-go https://sdk.operatorframework.io/docs/building-operators/golang More https://dev.to/ashokan/tenants-with-capsule-3428</description></item><item><title>Golang</title><link>https://notes.maxgio.me/notes/golang/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/golang/</guid><description>Context:
https://www.digitalocean.com/community/tutorials/how-to-use-contexts-in-go General:
https://www.digitalocean.com/community/tutorial_series/how-to-code-in-go Channels:
https://go101.org/article/channel-closing.html ELF dissection:
https://qzaidi.github.io/2017/03/05/elf-go-ident/ FAQs:
https://stackoverflow.com/questions/40823315/x-does-not-implement-y-method-has-a-pointer-receiver Filesystem:
https://bitfieldconsulting.com/golang/filesystems Pattterns:
Functional options: Self-referential functions and the design of options: https://commandcenter.blogspot.com/2014/01/self-referential-functions-and-design.html Functional options for friendly APIs: https://dave.cheney.net/2014/10/17/functional-options-for-friendly-apis https://gogoapps.io/blog/passing-loggers-in-go-golang-logging-best-practices/ Concurrency and parallelism:
https://spiralscout.com/blog/understanding-concurrency-and-parallelism-in-golang https://github.</description></item><item><title>Install R53 supercharger reduced pulley</title><link>https://notes.maxgio.me/notes/mini-r53-supercharger-pulley-install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/mini-r53-supercharger-pulley-install/</guid><description> https://www.youtube.com/watch?v=sNBSuTaMaOg (21m) https://www.youtube.com/watch?v=KpQuHeJLFHk&amp;amp;t=316s (12m)</description></item><item><title>K8s links</title><link>https://notes.maxgio.me/notes/2022-07-06-21-01-48/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/2022-07-06-21-01-48/</guid><description> https://github.com/iximiuz/client-go-examples</description></item><item><title>Kubectl resources</title><link>https://notes.maxgio.me/notes/kubectl-resources/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/kubectl-resources/</guid><description>Assume unit CPU: m, Memory: Ki
allocatable_cpu=$(kubectl describe node |grep Allocatable -A 5|grep cpu | awk '{sum+=$NF;} END{print sum;}') allocatable_mem=$(kubectl describe node |grep Allocatable -A 5|grep memory| awk '{sum+=$NF;} END{print sum;}') the allocated resource in request field allocated_req_cpu=$(kubectl describe node |grep Allocated -A 5|grep cpu | awk '{sum+=$2; } END{print sum;}') allocated_req_mem=$(kubectl describe node |grep Allocated -A 5|grep memory| awk '{sum+=$2; } END{print sum;}') finally, we got the resource spaces left usable_req_cpu=$(( allocatable_cpu - allocated_req_cpu )) usable_req_mem=$(( allocatable_mem - allocated_req_mem )) echo Usable CPU request $usable_req_cpu M echo Usable Memory request $usable_req_mem Ki</description></item><item><title>Kubernetes multi-tenancy awesome</title><link>https://notes.maxgio.me/notes/k8s-multitenancy-awesome/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/k8s-multitenancy-awesome/</guid><description>NaaS: Namespace as a Service.
Capsule Kiosk HNC AaaS API as a Service.
KubeZoo CPaaS: Control Plane as a Service.
Kamaji CaaS: Cluster as a Service.
VCluster Virtual Cluster kcp KubeSlice Other: Kubernetes Multi-Tenancy WG Kubernetes benchmarks for multi-tenancy Blogs: https://towardsaws.com/kubernetes-multi-tenancy-approach-b0f58d615971 https://dev.to/ashokan/naas-conclusions-for-now-6oo</description></item><item><title>Kubernetes networking</title><link>https://notes.maxgio.me/notes/k8s-networking/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/k8s-networking/</guid><description> Control and cluster proxy KEP: https://github.com/kubernetes/enhancements/tree/master/keps/sig-api-machinery/1281-network-proxy</description></item><item><title>Linux Page Cache</title><link>https://notes.maxgio.me/notes/linux-page-cache/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/linux-page-cache/</guid><description>Links:
Mini book: https://biriukov.dev/docs/page-cache Source code: https://github.com/brk0v/sre-page-cache-article/blob/main/lru/main.go Official doc of page table procfs interface: https://www.kernel.org/doc/Documentation/vm/pagemap.txt Official doc of idle pages tracking: https://www.kernel.org/doc/html/latest/admin-guide/mm/idle_page_tracking.html</description></item><item><title>Networking</title><link>https://notes.maxgio.me/notes/networking/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/networking/</guid><description> https://blog.scottlowe.org/2009/11/27/understanding-npiv-and-npv/</description></item><item><title>Notary, ORAS and OCI</title><link>https://notes.maxgio.me/notes/notary-oras/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/notary-oras/</guid><description>Sign image with Notary and ORAS Notary and Notation Notary project is a set of tools that helps you sign, store, and verify OCI artifacts using OCI-conformant registries.
Notation is an implementation of the Notary v2 specifications. As an implementation provides a CLI that adds signatures as standard items in the registry ecosystem, and can build a set of simple tooling for signing and verifying these signatures.
Notary v2 provides for multiple signatures of an OCI Artifact (including container images) to be persisted in an OCI conformant registry.</description></item><item><title>Notes on Fleet</title><link>https://notes.maxgio.me/notes/fleet-gitops-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/fleet-gitops-notes/</guid><description> Multi-cluster built-in Installations convert automatically no matter the resource types of which the manifests, everything to Helm releases Helm release declarations are not also Custom Resources, but only local files (fleet.yaml). At the time of https://www.youtube.com/watch?v=rIH_2CUXmwM Fleet didn&amp;rsquo;t support upward paths (like &amp;ldquo;..&amp;quot;), essential for using it with Kustomize. Fleet seems to not detect drifts and thus it doesn&amp;rsquo;t remove them when happening.</description></item><item><title>OCI signatures</title><link>https://notes.maxgio.me/notes/oci-signatures/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/oci-signatures/</guid><description> COSE signature in Go: https://github.com/veraison/go-cose OCI registry inspection with Skopeo OCI signatures with Notation and Go library ORAS migration to OCI artifact: https://github.com/oras-project/oras-go/issues/271 Notation-go supporting OCI artifacts and reference API: https://github.com/notaryproject/notation-go/issues/136</description></item><item><title>OCI specs and manifests</title><link>https://notes.maxgio.me/notes/oci/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/oci/</guid><description>The specification
Relations: Main OCI media types:
OCI content descriptor descripts a comoponent of an image. It can reference: OCI image manifest OCI artifact manifest OCI layer OCI artifact blobs &amp;hellip;</description></item><item><title>OS scheduling</title><link>https://notes.maxgio.me/notes/scheduling/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/scheduling/</guid><description> https://news.ycombinator.com/submitted?id=synergy20&amp;amp;next=30081204&amp;amp;n=31 https://docs.sel4.systems/projects/sel4/documentation.html https://ntrs.nasa.gov/api/citations/20200002390/downloads/20200002390.pdf</description></item><item><title>Profiling with eBPF</title><link>https://notes.maxgio.me/notes/profiling-with-ebpf/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/profiling-with-ebpf/</guid><description>Links:
https://www.brendangregg.com/blog/2016-10-21/linux-efficient-profiler.html https://blog.px.dev/cpu-profiling/ (a series) Examples:
https://github.com/pixie-io/pixie-demos/blob/main/ebpf-profiler Other material:
https://github.com/iovisor/gobpf with BCC and perf. Perf ring buffer and lost events perf_event_open(2) BPF ring buffer</description></item><item><title>Programming Go in vim</title><link>https://notes.maxgio.me/notes/vim-go-coc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/vim-go-coc/</guid><description> CoC: https://github.com/neoclide/coc.nvim coc-go extension: https://github.com/josa42/coc-go coc-go settings: https://github.com/rstacruz/vim-coc-settings https://github.com/neoclide/coc.nvim/issues/2087</description></item><item><title>RKE2 Operations</title><link>https://notes.maxgio.me/notes/rke2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/rke2/</guid><description>RKE2 Secuirty and compliance:
hardened to pass CIS K8s benchmark enabled FIPS 140-2 regularly scans componets images with trivy Flavours of k8s:
RKE (Docker as container engine, traditional) RKE 2 (hardened, next generation) K3S (focused on IoT, lightweight) K3S + RKE + security = RKE 2
RKE 2 does not rely on Docker RKE 2 launches CP compoents as static pods (managed by Kubelet)
RKE2 and K3s RKE2 is based on K3s.</description></item><item><title>RSA</title><link>https://notes.maxgio.me/notes/rsa/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/rsa/</guid><description>https://www.thedigitalcatonline.com/blog/2018/04/25/rsa-keys</description></item><item><title>Static VXLAN tunnels</title><link>https://notes.maxgio.me/notes/vxlan-static-tunnels/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/vxlan-static-tunnels/</guid><description>In VXLAN-based networks, there are a range of complexities and challenges in determining the destination virtual tunnel endpoints (VTEPs) for any given VXLAN. At scale, solutions such EVPN try to address these complexities, however, they also have their own complexities.
Static VXLAN tunnels serve to connect two VTEPs in a given environment. Static VXLAN tunnels are the simplest deployment mechanism for small scale environments and are interoperable with other vendors that adhere to VXLAN standards.</description></item><item><title>Technicolor router TIM-branded</title><link>https://notes.maxgio.me/notes/technicolor-timhub/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/technicolor-timhub/</guid><description>Links:
https://www.hwupgrade.it/forum/showthread.php?t=2823001 https://www.hwupgrade.it/forum/showthread.php?t=2870856 https://www.ilpuntotecnico.com/forum/index.php/topic,78162.0.html</description></item><item><title>TMux and stuff</title><link>https://notes.maxgio.me/notes/tmux/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/tmux/</guid><description>Improve the copy https://dev.to/iggredible/the-easy-way-to-copy-text-in-tmux-319g https://github.com/tmux-plugins/tmux-yank Persistence https://nickjanetakis.com/blog/save-and-restore-tmux-sessions-across-reboots-with-tmux-resurrect https://github.com/tmux-plugins/tmux-resurrect</description></item><item><title>Tweets</title><link>https://notes.maxgio.me/notes/tweets/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/tweets/</guid><description> https://twitter.com/foone/status/1545056366854692868?s=21&amp;amp;t=joF0EDTEnSR5ZVSVyZTpdg</description></item><item><title>Why switch to NeoVim?</title><link>https://notes.maxgio.me/notes/why-switch-to-neovim/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.maxgio.me/notes/why-switch-to-neovim/</guid><description>Materials:
https://www.reddit.com/r/neovim/comments/hm5xdp/why_switch_over_to_neovim/ https://wiki.archlinux.org/title/Neovim https://neovim.io/</description></item></channel></rss>